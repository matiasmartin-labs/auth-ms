name: build-native-and-k8s-deploy

on:
  release:
    types:
      - created

jobs:
#  build:
#    name: Build native and push image
#    runs-on: ubuntu-24.04-arm
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up Java & GraalVM
#        uses: graalvm/setup-graalvm@v1
#        with:
#          java-version: '21'
#          distribution: 'graalvm'
#
#      - name: Docker login
#        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u matiasmartin00 --password-stdin
#
#      - name: Cache Maven wrapper
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.m2/repository
#            .mvn/wrapper
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#
#      - name: Build native image
#        run: |
#          RELEASE_TAG="${{ github.event.release.tag_name }}"
#
#          ./mvnw clean install -Pnative -DskipTests -Dquarkus.container-image.tag=$RELEASE_TAG

  promote:
    name: Promote k8s manifests
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: write
      pull-requests: write
    #needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: K8S Renderer
        uses: matiasmartin-labs/gha-deployments/k8s-renderer@main
        with:
          input-dir: ./k8s
          output-dir: ./k8s/manifests
          log-level: debug
          version: ${{ github.event.release.tag_name }}
          docker-registry: ghcr.io/matiasmartin-labs
          image-pull-secret: ghcr-secret

      - name: Git Config
        run: |
          git config --global user.name "Action"
          git config --global user.email "action@github.com"

      - name: Checkout k8s-manifests branch
        run: |
          git fetch origin k8s-manifests
          git switch k8s-manifests
          
          git checkout -b "deploy-pr-${{ github.event.release.tag_name }}"

      - name: Move manifests to root directory
        run: |
          mv ./k8s/manifests/* ./

      - name: Commit and Push manifests
        run: |
          git add ./*.yml
          git commit -m "Promote Kubernetes manifests for version ${{ github.event.release.tag_name }}"
          git push origin "deploy-pr-${{ github.event.release.tag_name }}"

      - name: Create a PR for the manifests
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh pr create \
            --title "Promote Kubernetes Manifests for version ${{ github.event.release.tag_name }}" \
            --body "This PR adds Kubernetes manifests for version ${{ github.event.release.tag_name }}." \
            --base main \
            --head "deploy-pr-${{ github.event.release.tag_name }}" \
            --repo ${{ github.repository }}