
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.renderer/template-version: 1.0.0
    k8s.renderer/commit: d99e0a6e48dbc3b1a333b3bda0a9c274f6a6513e
    k8s.renderer/branch: refs/tags/v2.5.0
    k8s.renderer/vcs-url: matiasmartin-labs/auth-ms
    k8s.renderer/render-time: 2025-05-03T20:08:01Z
  labels:
    app.kubernetes.io/name: auth-ms
    app.kubernetes.io/part-of: auth-system
    app.kubernetes.io/version: v2.5.0
    app.kubernetes.io/managed-by: k8s.renderer
  name: auth-ms
  namespace: matiasmartin-labs
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: auth-ms
      app.kubernetes.io/part-of: auth-system
  template:
    metadata:
      annotations:
        k8s.renderer/template-version: 1.0.0
        k8s.renderer/commit: d99e0a6e48dbc3b1a333b3bda0a9c274f6a6513e
        k8s.renderer/branch: refs/tags/v2.5.0
        k8s.renderer/vcs-url: matiasmartin-labs/auth-ms
        k8s.renderer/render-time: 2025-05-03T20:08:01Z
      labels:
        app.kubernetes.io/name: auth-ms
        app.kubernetes.io/part-of: auth-system
        app.kubernetes.io/version: v2.5.0
        app.kubernetes.io/managed-by: k8s.renderer
      namespace: matiasmartin-labs
    spec:
      containers:
        - image: ghcr.io/matiasmartin-labs/auth-ms:v2.5.0
          imagePullPolicy: Always
          name: auth-ms
          resources:
            limits:
              cpu: 250m
              memory: 30Mi
            requests:
              cpu: 50m
              memory: 20Mi
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          envFrom: 
            - secretRef:
                name: psql-credentials 
            - secretRef:
                name: redis-credentials 
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          volumeMounts: 
            - mountPath: /etc/keys
              name: jwt-keys-volume
              readOnly: true 
      imagePullSecrets:
        - name: ghcr-secret
      volumes: 
        - name: jwt-keys-volume
          secret:
            defaultMode: 420
            optional: false
            secretName: jwt-keys  
